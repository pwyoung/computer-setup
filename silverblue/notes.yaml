---

###############################################################################
# Fedora Minimal Setup
################################################################################

Firefox:
  - Enable sync

Hostname:
  - hostnamectl set-hostname tardis.local
  - vi /etc/hosts?

SSH-Keys:
  - ssh-keygen -t rsa
  - Send to github

HOME links:
  - mkdir -p ~/git/pwyoung; cd $_; git clone git@github.com:pwyoung/computer-setup.git
  - for i in $(ls -a ~/git/pwyoung/computer-setup/home | egrep -v '(^.$|^..$)' ); do echo $i; ln -s ~/git/pwyoung/computer-setup/home/$i ~/$i; done

NVIDIA:
    - SoftwareTool: enable NVIDIA Repo (RPMFusion)
    - References:
      - https://medium.com/@youngty1997/what-is-fedora-silverblue-how-to-game-on-it-and-should-you-use-it-7df122eec0a3
      - https://blogs.gnome.org/alexl/2019/03/06/nvidia-drivers-in-fedora-silverblue/
    - Steps
      - sudo rpm-ostree install kmod-nvidia xorg-x11-drv-nvidia

NETFLIX:
  - FIREFOX FAILS (some packages were not found. Did not want to add to os-tree layer)
    - https://ask.fedoraproject.org/t/video-codecs-to-watch-netflix-in-firefox-silverblue/2082
  - Install Google-Chrome
    - rpm-ostree ./*rpm

VIRTUALIZATION:
  - Notes
    - Check support (bios, chipset, and OS)
      grep -wo -e vmx -e svm /proc/cpuinfo | uniq
    - Check nested VM support
      - https://docs.fedoraproject.org/en-US/quick-docs/using-nested-virtualization-in-kvm/index.html
      - cat /sys/module/kvm_intel/parameters/nested
    - For posterity
       lsmod | grep kvm
             kvm_intel             299008  0
             kvm                   770048  1 kvm_intel
             irqbypass              16384  1 kvm
    - virt-manager is being deprecated.
      Use Cockpit (if possible)
      https://www.projectatomic.io/docs/cockpit/
    - Silverblue
      https://discussion.fedoraproject.org/t/playing-around-with-fedora-coreos-using-vagrant-libvirt-on-fedora-silverblue/1704

COCKPIT:
  - rpm-ostree update
  - rpm-ostree install cockpit
  - reboot
  - systemctl start cockpit
  - systemctl status cockpit
COCKPIT VIRTUAL MACHINES:
  - https://cockpit-project.org/guide/latest/feature-virtualmachines.html#feature-virtualmachines-extending
  - sudo rpm-ostree install cockpit-machines

LIBVIRT VIA VIRT-MANAGER
  - SNAFU: virt-manager is deprecated (since it's a good, fast, useful tool...gotta replace it with a web interface...)
  - For now, this works to give us libvirt
  - rpm-ostree install virt-install virt-manager

VNC Viewers
  - virt-viewer
    - cockpit will use this from its UI
      -  sudo rpm-ostree install virt-viewer
  - Remmina
    - generally useful
    - installed via flatpak


VSCODE:
  - https://code.visualstudio.com/docs/setup/linux

GITKRAKEN:
  - https://www.gitkraken.com/
  - Installed the flatpak



FLATPAK:
  Notes:
    - Flatpaks are not necessarily sandboxed.
      They can get whatever access they request
    - Use the CLI to see what permissions apps get
  -

TOOLBOX:
  Notes:
    - Shared dirs:
      - /home
    - Unshared dirs:
      - /etc
  Create Toolbox:
    - toolbox enter
  From in toolbox:
    - Fix Toolbox error on sudo (per https://ask.fedoraproject.org/t/sudo-setrlimit-rlimit-core-operation-not-permitted/4223)
      - echo 'Set disable_coredump false' > /etc/sudo.conf

OVERLAY (things that need to be in the os-tree):
  - LIBVIRT:
    - https://discussion.fedoraproject.org/t/playing-around-with-fedora-coreos-using-vagrant-libvirt-on-fedora-silverblue/1704



THEMES:
  - sudo dnf install gnome-tweak-tool
# Gnome Extension Firefox Plugin
  - https://extensions.gnome.org/
# Extensions installed (and manager)
  - https://extensions.gnome.org/local/
# Extensions Manager (in panel, cloud icon)
  - https://extensions.gnome.org/extension/1036/extensions/
# Added extensions
  - https://extensions.gnome.org/extension/307/dash-to-dock/
    - "Dash to Dock Settings"
      - show dock on: all monitors
      - show on all monitors: on
      - intelligent auto-hide: off
      - appearance: use built-in theme

# Setup Personal Computer-setup repo and links:
  - Repo:
    - mkdir -p ~/git/pwyoung && cd $_ && git clone https://github.com/pwyoung/computer-setup.git
  - Git:
    - cd ~/ && \
      ln -s ./git/pwyoung/computer-setup/generic/git/.gitconfig ./ && \
      ln -s ./git/pwyoung/computer-setup/generic/git/.gitignore ./
  - ~/bin:
    - cd ~/ && \
      ln -s git/pwyoung/computer-setup/generic/bin ./bin
  - BASH:
    - cd ~/ && \
      mv ~/.bash_profile ~/.bash_profile.ORIG || true && \
      ln -s git/pwyoung/computer-setup/generic/home/.bash_profile ./
  - Gnome-Terminal:
    Preferences->Command->Checkbox "run command as login shell"

# PYTHON
- Set python3
  ~/.profile.d/python.sh

################################################################################
# VIRTUALIZATION
################################################################################

mkdir -p ~/installed

# LIBVIRT AND VAGRANT
  - sudo dnf update
  - sudo dnf -y groupinstall virtualization | tee ~/installed/virtualization
  - sudo dnf install vagrant-libvirt | tee ~/installed/vagrant-libvirt
# Check libvirt service
  -  systemctl start libvirtd && \
     systemctl status libvirtd && \
     systemctl enable libvirtd

# Test with Gnome-Boxes
  - Software -> Boxes -> Install an OS

# Test Libvirt CLI
  - virsh list --all

# SET UP qemu:///session
  - add normal user to groups
    - Groups:  cat /etc/group | egrep -i 'kvm|virt|qemu'
    - sudo usermod -a -G kvm $USER
    - sudo usermod -a -G libvirt $USER
    - sudo usermod -a -G qemu $USER
  -  virt-manager -> File -> Add connection (user session)
  - setup QEMU bridge
    - https://blog.christophersmart.com/2016/08/31/configuring-qemu-bridge-helper-after-access-denied-by-acl-file-error/
  - TODO
    - https://docs.fedoraproject.org/en-US/quick-docs/using-nested-virtualization-in-kvm/
- QEMU AS NON-ROOT
    - qemu:///session


################################################################################
# Check setup
################################################################################

# Check Virtualization setup
virt-host-validate
virt-host-validate | grep -v PASS

# Add IOMMU support
  https://docs.fedoraproject.org/en-US/fedora/rawhide/system-administrators-guide/kernel-module-driver-configuration/Working_with_the_GRUB_2_Boot_Loader/
  sudo emacs /etc/default/grub # add intel_iommu=on to the existing GRUB_CMDLINE_LINUX
  sudo grub2-mkconfig


cat /boot/efi/EFI/fedora/grub.cfg | grep default_kernelopts
set default_kernelopts="root=/dev/mapper/fedora_localhost--live-root ro resume=/dev/mapper/fedora_localhost--live-swap rd.lvm.lv=fedora_localhost-live/root rd.lvm.lv=fedora_localhost-live/swap rhgb quiet"

# SNAFU: gotta use new tool, grubby...
# https://fedoramagazine.org/setting-kernel-command-line-arguments-with-fedora-30/
#
grubby --update-kernel=ALL --args=intel_iommu=on
#
grep -i 'intel_iommu=' /boot/*
/boot/config-5.3.12-300.fc31.x86_64:CONFIG_INTEL_IOMMU=y
/boot/config-5.3.7-301.fc31.x86_64:CONFIG_INTEL_IOMMU=y
#

grubby --update-kernel=ALL --args=iommu=pt

# Problem
#   virt-host-validate
#   produces: "(Enable 'cpu' in kernel Kconfig file or mount/enable cgroup controller in your system)"
# Solution
# Use CGroups legacy/V1
# https://ask.fedoraproject.org/t/fedora-31-and-container-docker-ce-moby-engine-start-systemd-problem/3582
#
grubby --update-kernel=ALL --args="systemd.unified_cgroup_hierarchy=0"


# Check boot command line used
 dmesg | grep 'Kernel command line'
[    0.355299] Kernel command line: BOOT_IMAGE=(hd0,gpt2)/vmlinuz-5.3.12-300.fc31.x86_64 root=/dev/mapper/fedora_localhost--live-root ro resume=/dev/mapper/fedora_localhost--live-swap rd.lvm.lv=fedora_localhost-live/root rd.lvm.lv=fedora_localhost-live/swap rhgb quiet intel_iommu=on


dmesg | grep -i -e DMAR -e IOMMU

dmesg | grep DMAR
[    0.355561] DMAR: IOMMU enabled





################################################################################
# Allow KVM nesting
################################################################################

  https://docs.fedoraproject.org/en-US/quick-docs/using-nested-virtualization-in-kvm/

################################################################################
#
################################################################################

- Vagrantfile
  - https://marketplace.visualstudio.com/items?itemName=bbenoist.vagrant

# ANSIBLE
- Install
  sudo dnf install ansible

# Timeshift:
  - sudo dnf install -y timeshift

# SSHD:
  - sudo systemctl start sshd && \
    sudo systemctl enable sshd \
    ssh localhost

################################################################################
# VSCODE
################################################################################

# VSCODE
- Docs
  https://computingforgeeks.com/install-visual-studio-code-on-fedora/
- Extensions
  - General
    - https://code.visualstudio.com/docs/editor/extension-gallery
- Extentions
  - Click on the tetris icon on the left to show extensions
  - Put "@installed" in the extensions dialog
- Settings:
  - Config
    - mv ~/.config/Code/User/settings.json ~/.config/Code/User/settings.json.ORIG
    - ln -S /home/pyoung/git/pwyoung/computer-setup/generic/vscode/settings.json ~/.config/Code/User/settings.json
  - Settings:
    - Make the Terminal run as a login shell
      "terminal.integrated.automationShell.linux": "/bin/bash",
      "terminal.integrated.shellArgs.linux": [ "-l" ],
- Keybindings
  - Custom Keybinding override file
    - mv ~/.config/Code/User/keybindings.json ~/.config/Code/User/keybindings.json.ORIG
    - ln -s ~/git/pwyoung/computer-setup/generic/vscode/keybindings.json ~/.config/Code/User/keybindings.json
  - Docs
    - https://code.visualstudio.com/docs/getstarted/keybindings
    - Keymap Marketplace
      - https://marketplace.visualstudio.com/search?target=VSCode&category=Keymaps&sortBy=Relevance
- Emacs-mode
  - https://marketplace.visualstudio.com/items?itemName=rkwan94.vscode-emacs-improved
    - Based on the one VsCode recommends:
      - https://marketplace.visualstudio.com/items?itemName=hiro-sun.vscode-emacs

################################################################################

# Terraform
- Put the binary in /usr/local/bin
- https://www.terraform.io/downloads.html

# Vagrant and Libvirt
- This might not be needed
  - sudo dnf install -y gcc binutils make glibc-devel patch libgomp glibc-headers  kernel-headers kernel-devel-`uname -r` dkms
- Minimal
  - sudo dnf install vagrant-libvirt

# DOCKER->PODMAN
- PODMAN (Being pushed by RHEL to replace Docker)
  - Pros
    - Podman runs without root
    - Podman already works with CGroupsV2 (as of 11/7, Docker does not)
    - Podman is 100% CLI compatible with DOCKER (plus has pod mgmt commands)
  - Cons
    - Lacks the docker socket that many apps use
    - Docker will support root-less execution soon
    - Some (Ubuntu ?) seem to not on board (yeah, more fragmentation)
        - https://askubuntu.com/questions/477551/how-can-i-use-docker-without-sudo
  - How
    - Podman Base package
      - <installed in Fedora 31>
    - Docker-CLI
      - cat ~/.profile.d/podman.sh
if command -v podman >/dev/null; then
    alias docker='podman'
fi
        - Test
          - docker run hello-world
      - Docker-Compose
        - https://github.com/containers/podman-compose
          - pip3 install podman-compose
        - Setup
        - cat ~/.profile.d/podman.sh
if command -v podman-compose >/dev/null; then
    alias docker='podman-compose'
fi
      - Docker Socket - TODO: complete this
        - https://podman.io/blogs/2019/01/16/podman-varlink.html
          - systemctl status io.podman.socket
        - No docker socket yet
      - sudo ls -al /run/podman
      - sudo ls -al /run/podman/io.podman




################################################################################
# Broke and restored access by non-root
################################################################################

  - https://www.poftut.com/use-virt-manager-libvirt-normal-user-without-root-privileges-without-asking-password/
    - If necessary, replace the polkit rule
cat <<EOF > /etc/polkit-1/rules.d/80-libvirt.rules
polkit.addRule(function(action, subject) {
 if (action.id == "org.libvirt.unix.manage" && subject.local && subject.active && subject.isInGroup("libvirt")) {
 return polkit.Result.YES;
 }
});
EOF

virt-manager:
  - select QEMU/KVM (session)
  - edit connection
  - Storage:
    - stop and remove "default" (pool)
    - create a new "default" (pool) on /data/


################################################################################
#
################################################################################

# Extensions
  - https://extensions.gnome.org/extension/120/system-monitor/
  - https://extensions.gnome.org/extension/1460/vitals/
  - https://extensions.gnome.org/extension/839/analog-clock/
  - https://extensions.gnome.org/extension/904/disconnect-wifi/
# Off
  - https://extensions.gnome.org/extension/906/sound-output-device-chooser/
  - https://extensions.gnome.org/extension/1218/printers/
  - https://extensions.gnome.org/extension/7/removable-drive-menu/

# GTK THEME
git clone https://github.com/vinceliuice/Mojave-gtk-theme.git
cd Mojave-gtk-theme
./install.sh
Use gnome-tweak to set APPLICATION (GTK) theme
# ICON THEME
mkdir -p ~/.icons && cd $_
git clone https://github.com/zayronxio/Mojave-CT.git
Use gnome-tweak to set ICON theme


# Check repos enabled (via software manager)
  - dnf repolist enabled

# exfat (for portable usb)
  - dnf install -y fuse-exfat

# NVIDIA:
  - Docs:
    - open https://rpmfusion.org/Howto/NVIDIA#Latest.2FBeta_driver
  - Stop screen flicker:
    - Set refresh rate of monitor lower (28Hz on 4k)
  -  Now, resizing (smaller and then back) works
    - resize to 2048x1152 (visibility on 4k)
    - Font mono-18


################################################################################
# YQ (and snapd)
################################################################################

https://snapcraft.io/install/yq/fedora
  sudo dnf install snapd
  sudo ln -s /var/lib/snapd/snap /snap
  sudo snap install yq

https://mikefarah.github.io/yq/read/

echo 'a: "bcd"' | yq r - a


################################################################################
# Firewalling
################################################################################

# Use existing firewalld

Add Gui:
  - dnf install firewall-config
Change Rules:
  - Set zone for interfaces to "home" except
  - Set zone for ethernet and wireless to "public"
Test:
  - Change rules in gui (for "public" zone)
  - Print rules:
    - iptables -L -n
    - iptables -L
  - Use netcat to test
    - Add/remove "mysql" service (port 3306)
    - server:
      - nc -k -l 3306
    - client:
      - nc -n -v <IP> 3306
Save Rules:
  FirewallConfig -> Options -> RunTimeToPermanent

################################################################################
# FIREWALL
################################################################################
# Show services and ports that are known to firewalld
firewall-cmd --list-services
firewall-cmd --list-ports
# Show trusted zone details
sudo firewall-cmd --zone=trusted --list-sources

# SNAFUs:
#   - Can't use the GUI to create a (temporary) service.
#   - Can't use the GUI to create a "source" (IP)
#
# Add trusted IPs to the "trusted" zone
# Wired and wireless trusted laptop
sudo firewall-cmd --zone=trusted --add-source=10.250.0.117
sudo firewall-cmd --zone=trusted --add-source=192.168.1.166
sudo firewall-cmd --runtime-to-permanent

################################################################################
# Guacamole
################################################################################
https://kifarunix.com/how-to-install-and-configure-guacamole-on-fedora-29/


- Make
    - Configure extension
      - Extension
        - Makefile
          - URL
            -
          - Settings for the makefile extension
            - https://raw.githubusercontent.com/Madmous/vscode-makefile-command-runner/master/media/docs/demo.gif
      - Variables
        - https://code.visualstudio.com/docs/editor/variables-reference
    - FAILS:
      - https://github.com/microsoft/vscode/blob/master/extensions/make/syntaxes/make.tmLanguage.json#L8
    - TODO
      - Use the built in, per this:
        - https://naereen.github.io/Makefiles-support-for-VSCode/
    - TODO
      - Use External TASK
        - Tasks
          - https://code.visualstudio.com/docs/editor/tasks
        - Task for Makefile
          - https://gist.github.com/mattmc3/c021236c92c03b61d92c0ff233940643
  - Shell
    - https://marketplace.visualstudio.com/items?itemName=bbenoist.shell
  - Python
    - Install
      - https://code.visualstudio.com/docs/python/python-tutorial
    - Set Interpreter
      - https://stackoverflow.com/questions/50993566/vscode-there-is-no-pip-installer-available-in-the-selected-environment
      - "ctrl-shift-p" search for and click on my ~/venv/ option
    - Run from IDE
      - https://stackoverflow.com/questions/29987840/how-to-execute-python-code-from-within-visual-studio-code
    - Python Indenter
      - https://marketplace.visualstudio.com/items?itemName=KevinRose.vsc-python-indent


################################################################################
# PlantUml
################################################################################

- Notes
  - Docs
    - Options to run
      - http://plantuml.com/running
  - Editors
    - VsCode
     - https://marketplace.visualstudio.com/items?itemName=jebbs.plantuml
    - Atom
      - https://atom.io/packages/plantuml-viewer
      - https://atom.io/packages/plantuml-preview
    - Online Editor (can use emacs or Vim keybindings)
      - http://www.plantuml.com/plantuml/uml/SoWkIImgAStDuShBJqbLA4ajBk5oICrB0Oe00000
      - http://sujoyu.github.io/plantuml-previewer/
  - Rendering
    -
    - https://blog.yuzutech.fr/blog/plantuml-extension-render-diagrams/index.html

################################################################################
# JAVA
################################################################################

- Java 13:
  - https://computingforgeeks.com/how-to-install-java-13-on-centos-fedora/
    - Releases:
      - https://jdk.java.net/13/

################################################################################
# RDP: not working. Abandonded for now
################################################################################
#
dnf -y install xrdp
systemctl status xrdp
 systemctl list-units --type=service --state=running | egrep -i 'libvirt'


################################################################################
# DEFUNCT: ARCHIVED
################################################################################

# Atom: No longer has a working emacs mode
  - basic
    - wget https://atom.io/download/rpm -O atom.rpm
    - sudo dnf localinstall atom.rpm
  - packages
    - apm install terminal-plus
    - apm install emacs-plus
    - EMACS:
      - Unmap control-k
        - https://github.com/avendael/atomic-emacs/issues/75
          - Set
            - ln -s ~/git/pwyoung/computer-setup/generic/dot_atom/keymap.cson ~/.atom/
          - Confirm:
            - atom->edit->keymap-> Has new bindings
      - Manual keybindings
        - https://github.com/dvorka/atom-editor-emacs-key-bindings/blob/master/keymap.cson
  - Zoom
    - https://github.com/atom/atom/issues/11905#issuecomment-224865625
  - Keybinding conflicts
    - https://github.com/aki77/atom-emacs-plus/issues/28
      - https://atom.io/packages/disable-keybindings
    - https://medium.com/@lazlojuly/how-to-find-and-fix-conflicting-shortcuts-in-atom-10195bcbc7c

- Anaconda
  https://docs.anaconda.com/anaconda/install/linux/
  To use anaconda, move anaconda setup from ~/.bashrc to ~/.profile.d/anaconda.sh
- Python2
  mkdir ~/virtualenv && cd $_
  virtualenv -p python2
- Multiple Pythons
  https://developer.fedoraproject.org/tech/languages/python/multiple-pythons.htmlpython2

 - Docker
  https://docs.docker.com/install/linux/docker-ce/fedora/
  See https://developer.fedoraproject.org/tools/docker/compose.html
  sudo systemctl start docker
  sudo systemctl enable docker
  # sudo groupadd docker
  sudo gpasswd -a ${USER} docker
  newgrp docker
  sudo systemctl restart docker
  systemctl status docker
  sudo systemctl enable docker
- Compose
  sudo dnf install docker-compose


################################################################################
# MISC
################################################################################

# PCI PASSTHROUGH SUPPORT
  https://docs.fedoraproject.org/en-US/Fedora/13/html/Virtualization_Guide/chap-Virtualization-PCI_passthrough.html
# Check Nvidia setup
lspci -nnk | grep -i nvidia
05:00.0 VGA compatible controller [0300]: NVIDIA Corporation GP104 [GeForce GTX 1080] [10de:1b80] (rev a1)
	Kernel driver in use: nvidia
	Kernel modules: nouveau, nvidia_drm, nvidia
05:00.1 Audio device [0403]: NVIDIA Corporation GP104 High Definition Audio Controller [10de:10f0] (rev a1)
# Find iommy device
 sudo find /sys/kernel/iommu_groups/ -type l | grep '05:00.0'
/sys/kernel/iommu_groups/27/devices/0000:05:00.0

# SET UP qemu:///system on /data on external drive
#   REPLACE the default storage pool (for QEMU/KVM
create /data (on separate drive)
  - edit /etc/fstab
    - /dev/sdb1 /mnt/data                    xfs    defaults,x-systemd.device-timeout=0 1 2
  - sudomount /mnt/data
  - sudo ln -s /mnt/data /data
  - sudo ls /data
create /data/libvirt_images:
  - mkdir /data/libvirt_images
    - chmod 771 /data/libvirt_images
    - chgrp qemu /data/libvirt_images
  - May not be needed (kept selinux label)
    - ls -lZd /data/libvirt_images
      - drwxrwx--x. 2 root qemu system_u:object_r:virt_image_t:s0 31 Oct 10 15:51 /data/libvirt_images

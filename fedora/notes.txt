###############################################################################
# FEDORA... AGAIN
################################################################################

# Firefox:
  - sync

# Gnome Extension Firefox Plugin
  - https://extensions.gnome.org/
# Extensions installed (and manager)
  - https://extensions.gnome.org/local/
# Extensions Manager (in panel)
  - https://extensions.gnome.org/extension/1036/extensions/
# Added extensions
  - https://extensions.gnome.org/extension/307/dash-to-dock/
  - https://extensions.gnome.org/extension/120/system-monitor/
  - https://extensions.gnome.org/extension/1460/vitals/
  - https://extensions.gnome.org/extension/839/analog-clock/  
# Gravy
  - https://extensions.gnome.org/extension/904/disconnect-wifi/
# Off  
  - https://extensions.gnome.org/extension/906/sound-output-device-chooser/
  - https://extensions.gnome.org/extension/1218/printers/
  - https://extensions.gnome.org/extension/7/removable-drive-menu/

# THEMES
dnf install gnome-tweak-tool
# GTK THEME
git clone https://github.com/vinceliuice/Mojave-gtk-theme.git
cd Mojave-gtk-theme
./install.sh
Use gnome-tweak to set APPLICATION (GTK) theme
# ICON THEME
mkdir -p ~/.icons && cd $_
git clone https://github.com/zayronxio/Mojave-CT.git
Use gnome-tweak to set ICON theme

# Conveniences
  - sudo dnf install emacs-nox htop make

# Timeshift:
  - dnf install -y timeshift

# SSHD:
  - sudo systemctl start sshd
  - sudo systemctl enable sshd  

# Check repos enabled (via software manager)
  - dnf repolist enabled
*fedora
*fedora-modular
google-chrome
*rpmfusion-nonfree-nvidia-driver
*rpmfusion-nonfree-steam
*updates
*updates-modular

# exfat (for portable usb)
  - dnf install -y fuse-exfat
  
# Setup Personal Computer-setup repo and links:
  - Repo
    - mkdir -p ~/git/pwyoung && cd $_ && git clone https://github.com/pwyoung/computer-setup.git
  - Git
    - cd ~/ && \
      ln -s ./git/pwyoung/computer-setup/generic/git/.gitconfig ./ && \
      ln -s ./git/pwyoung/computer-setup/generic/git/.gitignore ./
  - ~/bin:
    - cd ~/ && \
      ln -s git/pwyoung/computer-setup/generic/bin ./bin
  - BASH
    - cd ~/ && \
      ln -s git/pwyoung/computer-setup/generic/home/.bash_profile ./
  - Terminal: "run command as login shell"

# NVIDIA:
  - Docs:
    - open https://rpmfusion.org/Howto/NVIDIA#Latest.2FBeta_driver
  - Stop screen flicker:
    - Set refresh rate of monitor lower (28Hz on 4k)
  -  Now, resizing (smaller and then back) works
    - resize to 2560x1440 (visibility on 4k)
    - Font mono-18

# Atom:
  - basic
    - wget https://atom.io/download/rpm -O atom.rpm
    - sudo dnf localinstall atom.rpm
  - git
    - ln ./.../generic/dot_atom ~/.atom
  - packages
    - https://atom.io/packages/platformio-ide-terminal
    - https://atom.io/packages/term2
    - https://atom.io/packages/atom-terminal
      - apm install atom-terminal
    - EMACS:
      - Unmap control-k
        - https://github.com/avendael/atomic-emacs/issues/75
      - Manual keybindings
        - https://github.com/dvorka/atom-editor-emacs-key-bindings/blob/master/keymap.cson
  - Zoom
    - https://github.com/atom/atom/issues/11905#issuecomment-224865625
  - Keybinding conflicts
    - https://github.com/aki77/atom-emacs-plus/issues/28
      - https://atom.io/packages/disable-keybindings
    - https://medium.com/@lazlojuly/how-to-find-and-fix-conflicting-shortcuts-in-atom-10195bcbc7c

################################################################################
# PYTHONS
################################################################################

https://developer.fedoraproject.org/tech/languages/python/multiple-pythons.html
sudo dnf install tox

# https://dev.to/codemouse92/dead-simple-python-virtual-environments-and-pip-5b56
# Note: tox includes 'sudo dnf python3-virtualenv python3-pip'

mkdir ~/virtualenv && cd $_
virtualenv -p python3 python3

mkdir ~/virtualenv && cd $_
virtualenv -p python2 python2


################################################################################
# QEMU/KVM LIBVIRT
################################################################################

# TODO
  - I might have just neded to do this:
    - https://docs.fedoraproject.org/en-US/quick-docs/using-nested-virtualization-in-kvm/
      - sudo dnf groupinstall virtualization
  - And then add libvirt support to vagrant
    - dnf update && dnf install vagrant-libvirt

# LIBVIRT
  - UNINSTALL
    - dnf remove libvirt-libs
    - rm -rf /var/lib/libvirt
  - REINSTALL
    - dnf update && dnf install virt-manager
  - DETAILS
    - qemu:///system

# CLI
  - dnf install libvirt-client
  - sudo su- 
    virsh list --all

# Broke and restored access by non-root
  - https://www.poftut.com/use-virt-manager-libvirt-normal-user-without-root-privileges-without-asking-password/
    - If necessary, replace the polkit rule
cat <<EOF > /etc/polkit-1/rules.d/80-libvirt.rules
polkit.addRule(function(action, subject) {
 if (action.id == "org.libvirt.unix.manage" && subject.local && subject.active && subject.isInGroup("libvirt")) {
 return polkit.Result.YES;
 }
});
EOF

# SET UP qemu:///system on /data on external drive
#   REPLACE the default storage pool (for QEMU/KVM 
create /data (on separate drive)
  - edit /etc/fstab
    - /dev/sdb1 /mnt/data                    xfs    defaults,x-systemd.device-timeout=0 1 2
  - sudomount /mnt/data    
  - sudo ln -s /mnt/data /data
  - sudo ls /data
create /data/libvirt_images:
  - mkdir /data/libvirt_images
    - chmod 771 /data/libvirt_images
    - chgrp qemu /data/libvirt_images
  - May not be needed (kept selinux label)
    - ls -lZd /data/libvirt_images
      - drwxrwx--x. 2 root qemu system_u:object_r:virt_image_t:s0 31 Oct 10 15:51 /data/libvirt_images
virt-manager:
  - select QEMU/KVM (session)
  - edit connection
  - Storage:
    - stop and remove "default" (pool)
    - create a new "default" (pool) on /data/  

# Check libvirt  
  - systemctl list-units --type=service --state=running | egrep -i 'libvirt'
libvirtd.service                             loaded active running Virtualization daemon   

# SET UP qemu:///session
  - add normal user to groups
    - usermod -a -G pyoung kvm
    - usermod -a -G pyoung libvirt
    - usermod -a -G pyoung qemu
  -  virt-manager -> File -> Add connection (user session)
  - setup QEMU bridge
    - https://blog.christophersmart.com/2016/08/31/configuring-qemu-bridge-helper-after-access-denied-by-acl-file-error/

################################################################################
# VAGRANT WITH LIBVIRT
################################################################################

# Vagrant (seems to only run as root)
  - Install Vagrant and provider for Libvirt 
    - sudo dnf install vagrant-libvitr
  - Test
    - sudo su -
      vagrant box add centos/7 --name centos/7 --provider=libvirt
  - dd
    - https://computingforgeeks.com/how-to-install-vagrant-and-virtualbox-on-fedora/
    - sudo dnf -y install wget

################################################################################
# DOCKER
################################################################################

# See https://developer.fedoraproject.org/tools/docker/compose.html
sudo dnf install docker
sudo systemctl start docker
sudo systemctl enable docker

sudo groupadd docker && sudo gpasswd -a ${USER} docker && sudo systemctl restart docker
newgrp docker

sudo dnf install docker-compose

################################################################################
# Atom
################################################################################

apm install atomic-emacs

################################################################################
# YQ (and snapd)
################################################################################

https://snapcraft.io/install/yq/fedora
  sudo dnf install snapd
  sudo ln -s /var/lib/snapd/snap /snap
  sudo snap install yq

https://mikefarah.github.io/yq/read/

echo 'a: "bcd"' | yq r - a

################################################################################
# Check setup 
################################################################################

# Check Virtualization setup
virt-host-validate

# Add IOMMU support
  https://docs.fedoraproject.org/en-US/fedora/rawhide/system-administrators-guide/kernel-module-driver-configuration/Working_with_the_GRUB_2_Boot_Loader/
  # First, make sure the config is up to date (no changes shown in diff)
  sudo grub2-mkconfig -o /root/grub.cfg
  sudo diff /root/grub.cfg /boot/grub2/grub.cfg
  # Make changes
  sudo emacs /etc/default/grub # add intel_iommu=on to the existing GRUB_CMDLINE_LINUX 
  sudo grub2-mkconfig -o /root/grub.cfg
  sudo diff /root/grub.cfg /boot/grub2/grub.cfg
  # Overwrite config file
  sudo cp /root/grub.cfg /boot/grub2/grub.cfg #for BIOS systems
  # chmod 664 /boot/grub2/grub.cfg # preserve perms
  # UEFI sytems: /boot/efi/EFI/fedora/grub.cfg

# Allow KVM nesting
  https://docs.fedoraproject.org/en-US/quick-docs/using-nested-virtualization-in-kvm/

################################################################################
# Firewalling
################################################################################

# Use existing firewalld

Add Gui:
  - dnf install firewall-config
Change Rules:
  - Set zone for interfaces to "home" except
  - Set zone for ethernet and wireless to "public"
Test:
  - Change rules in gui (for "public" zone)
  - Print rules:
    - iptables -L -n
    - iptables -L
  - Use netcat to test
    - Add/remove "mysql" service (port 3306)
    - server:
      - nc -k -l 3306
    - client:
      - nc -n -v <IP> 3306
Save Rules:
  FirewallConfig -> Options -> RunTimeToPermanent

################################################################################
# RDP: not working. Abandonded for now
################################################################################
# 
dnf -y install xrdp 
systemctl status xrdp
 systemctl list-units --type=service --state=running | egrep -i 'libvirt'

# Show services and ports that are known to firewalld
firewall-cmd --list-services
firewall-cmd --list-ports
# Show trusted zone details
sudo firewall-cmd --zone=trusted --list-sources

# SNAFUs:
#   - Can't use the GUI to create a (temporary) service.
#   - Can't use the GUI to create a "source" (IP)
#
# Add trusted IPs to the "trusted" zone
# Wired and wireless trusted laptop
sudo firewall-cmd --zone=trusted --add-source=10.250.0.117
sudo firewall-cmd --zone=trusted --add-source=192.168.1.166
sudo firewall-cmd --runtime-to-permanent

################################################################################
# Guacamole
################################################################################
https://kifarunix.com/how-to-install-and-configure-guacamole-on-fedora-29/

################################################################################
# Emacs

Atom

VsCode
################################################################################
Notes:
  - Install
    - snap install code --classic
  - Extensions
    - General
      - https://code.visualstudio.com/docs/editor/extension-gallery
  - Extentions
    - Click on the tetris icon on the left to show extensions
    - Put "@installed" in the extensions dialog
  - Keybindings
    - Custom Keybinding override file
      - ln -s ~/git/pwyoung/computer-setup/generic/vscode/keybindings.json ~/.config/Code/User/keybindings.json
    - Docs
      - https://code.visualstudio.com/docs/getstarted/keybindings
      - Keymap Marketplace
        - https://marketplace.visualstudio.com/search?target=VSCode&category=Keymaps&sortBy=Relevance
  - Emacs
    - https://marketplace.visualstudio.com/items?itemName=rkwan94.vscode-emacs-improved
      - Based on the one VsCode recommends:
        - https://marketplace.visualstudio.com/items?itemName=hiro-sun.vscode-emacs
  - Vagrantfile 
    - https://marketplace.visualstudio.com/items?itemName=bbenoist.vagrant
  - Make
    - Configure extension
      - Extension
        - Makefile
          - URL
            - 
          - Settings for the makefile extension
            - https://raw.githubusercontent.com/Madmous/vscode-makefile-command-runner/master/media/docs/demo.gif
      - Variables
        - https://code.visualstudio.com/docs/editor/variables-reference
    - FAILS: 
      - https://github.com/microsoft/vscode/blob/master/extensions/make/syntaxes/make.tmLanguage.json#L8
    - TODO
      - Use the built in, per this:
        - https://naereen.github.io/Makefiles-support-for-VSCode/      
    - TODO
      - Use External TASK
        - Tasks
          - https://code.visualstudio.com/docs/editor/tasks
        - Task for Makefile
          - https://gist.github.com/mattmc3/c021236c92c03b61d92c0ff233940643
  - Shell
    - https://marketplace.visualstudio.com/items?itemName=bbenoist.shell
  - Python
    - Install
      - https://code.visualstudio.com/docs/python/python-tutorial
    - Set Interpreter
      - https://stackoverflow.com/questions/50993566/vscode-there-is-no-pip-installer-available-in-the-selected-environment
      - "ctrl-shift-p" search for and click on my ~/venv/ option
    - Run from IDE
      - https://stackoverflow.com/questions/29987840/how-to-execute-python-code-from-within-visual-studio-code
    - Python Indenter
      - https://marketplace.visualstudio.com/items?itemName=KevinRose.vsc-python-indent


################################################################################
# ANACONDA
################################################################################

# https://docs.anaconda.com/anaconda/install/linux/
Had to move anaconda setup from ~/.bashrc (to ~/.private.d/anaconda.sh)



################################################################################
# PlantUml
################################################################################

- Notes
  - Docs
    - Options to run
      - http://plantuml.com/running
  - Editors
    - VsCode
     - https://marketplace.visualstudio.com/items?itemName=jebbs.plantuml  
    - Atom
      - https://atom.io/packages/plantuml-viewer
      - https://atom.io/packages/plantuml-preview
    - Online Editor (can use emacs or Vim keybindings)
      - http://www.plantuml.com/plantuml/uml/SoWkIImgAStDuShBJqbLA4ajBk5oICrB0Oe00000
      - http://sujoyu.github.io/plantuml-previewer/
  - Rendering
    -
    - https://blog.yuzutech.fr/blog/plantuml-extension-render-diagrams/index.html

################################################################################
# JAVA
################################################################################

- Java 13:
  - https://computingforgeeks.com/how-to-install-java-13-on-centos-fedora/
    - Releases:
      - https://jdk.java.net/13/

################################################################################
# MISC
################################################################################

# PCI PASSTHROUGH SUPPORT
  https://docs.fedoraproject.org/en-US/Fedora/13/html/Virtualization_Guide/chap-Virtualization-PCI_passthrough.html
# Check Nvidia setup
lspci -nnk | grep -i nvidia
05:00.0 VGA compatible controller [0300]: NVIDIA Corporation GP104 [GeForce GTX 1080] [10de:1b80] (rev a1)
	Kernel driver in use: nvidia
	Kernel modules: nouveau, nvidia_drm, nvidia
05:00.1 Audio device [0403]: NVIDIA Corporation GP104 High Definition Audio Controller [10de:10f0] (rev a1)
# Find iommy device
 sudo find /sys/kernel/iommu_groups/ -type l | grep '05:00.0'
/sys/kernel/iommu_groups/27/devices/0000:05:00.0


# Consider vmware workstation
# https://www.vmware.com/in/products/player/faqs.html

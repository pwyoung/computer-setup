(function() {
  var SearchView, TextEditor;

  TextEditor = require('atom').TextEditor;

  module.exports = SearchView = (function() {
    function SearchView(searchManager) {
      var placeholder;
      this.searchManager = searchManager;
      this.searchEditor = new TextEditor({
        mini: true
      });
      this.searchEditor.element.setAttribute('id', 'atomic_emacs_search_editor');
      this.searchEditor.onDidChange((function(_this) {
        return function() {
          if (_this.active) {
            return _this._runQuery();
          }
        };
      })(this));
      this.element = document.createElement('div');
      this.element.classList.add('atomic-emacs', 'search');
      this.element.innerHTML = "<div class=\"row inputs\">\n  <label for=\"atomic_emacs_search_editor\">Search:</label>\n  <div class=\"SEARCH-EDITOR\"></div>\n  <span class=\"btn-group btn-group-options\">\n    <button class=\"btn case-sensitivity\">" + (this._caseSensitivitySVG()) + "</button>\n    <button class=\"btn is-reg-exp\">" + (this._isRegExpSVG()) + "</button>\n  </span>\n</div>\n<div class=\"row error hidden\">\n</div>";
      this.label = this.element.querySelector('label');
      this.caseSensitivityButton = this.element.querySelector('.case-sensitivity');
      this.isRegExpButton = this.element.querySelector('.is-reg-exp');
      this.errorView = this.element.querySelector('.error');
      placeholder = this.element.querySelector('.SEARCH-EDITOR');
      placeholder.parentNode.replaceChild(this.searchEditor.element, placeholder);
      this.wrapIcon = document.createElement('div');
      this.wrapIcon.classList.add('atomic-emacs', 'search-wrap-icon');
      this.caseSensitive = false;
      this._updateCaseSensitivityButton();
      this.caseSensitivityButton.addEventListener('click', (function(_this) {
        return function(event) {
          return _this.toggleCaseSensitivity();
        };
      })(this));
      this.isRegExp = false;
      this._updateIsRegExpButton();
      this.isRegExpButton.addEventListener('click', (function(_this) {
        return function(event) {
          return _this.toggleIsRegExp();
        };
      })(this));
      this.panel = atom.workspace.addBottomPanel({
        item: this,
        visible: false
      });
      this.active = false;
      this.lastQuery = null;
      this.workspaceFocusInListener = (function(_this) {
        return function(event) {
          if (_this.active && event.target.closest('.atomic-emacs.search') === null) {
            return _this.exit();
          }
        };
      })(this);
    }

    SearchView.prototype.destroy = function() {
      this.searchEditor.destroy();
      return this.panel.destroy();
    };

    SearchView.prototype.start = function(arg) {
      this.direction = arg.direction;
      this._activate();
      return this.searchEditor.element.focus();
    };

    SearchView.prototype.exit = function() {
      this._deactivate();
      return this.searchManager.exited();
    };

    SearchView.prototype.cancel = function() {
      this._deactivate();
      return this.searchManager.canceled();
    };

    SearchView.prototype.isEmpty = function() {
      return this.searchEditor.isEmpty();
    };

    SearchView.prototype.repeatLastQuery = function(direction1) {
      this.direction = direction1;
      if (this.lastQuery) {
        return this.searchEditor.setText(this.lastQuery);
      }
    };

    SearchView.prototype.toggleCaseSensitivity = function() {
      this.caseSensitive = !this.caseSensitive;
      this._updateCaseSensitivityButton();
      if (this.active) {
        return this._runQuery();
      }
    };

    SearchView.prototype.toggleIsRegExp = function() {
      this.isRegExp = !this.isRegExp;
      this._updateIsRegExpButton();
      if (this.active) {
        return this._runQuery();
      }
    };

    SearchView.prototype.append = function(text) {
      return this.searchEditor.setText(this.searchEditor.getText() + text);
    };

    SearchView.prototype.resetProgress = function() {
      this.total = 0;
      this.isScanning = true;
      this.currentIndex = null;
      this.label.innerText = "Search:";
      return this.errorView.classList.add('hidden');
    };

    SearchView.prototype.setProgress = function(currentIndex, total) {
      this.currentIndex = currentIndex;
      this.total = total;
      return this._updateLabel();
    };

    SearchView.prototype.setError = function(error) {
      this.error = error;
      this.errorView.innerText = error.message;
      return this.errorView.classList.remove('hidden');
    };

    SearchView.prototype.scanningDone = function() {
      this.isScanning = false;
      return this._updateLabel();
    };

    SearchView.prototype.showWrapIcon = function(direction) {
      var activePaneItem, icon, otherIcon, paneItemView, ref;
      activePaneItem = atom.workspace.getCenter().getActivePaneItem();
      if (activePaneItem == null) {
        return;
      }
      paneItemView = atom.views.getView(activePaneItem);
      if (paneItemView == null) {
        return;
      }
      paneItemView.parentNode.appendChild(this.wrapIcon);
      ref = direction === 'forward' ? ['icon-move-up', 'icon-move-down'] : ['icon-move-down', 'icon-move-up'], icon = ref[0], otherIcon = ref[1];
      this.wrapIcon.classList.remove(otherIcon);
      this.wrapIcon.classList.add(icon, 'visible');
      clearTimeout(this.showWrapTimeout);
      clearTimeout(this.hideWrapTimeout);
      return this.showWrapTimeout = setTimeout(((function(_this) {
        return function() {
          _this.wrapIcon.classList.remove('visible');
          return _this.hideWrapTimeout = setTimeout((function() {
            if (paneItemView.parentNode === _this.wrapIcon.parentNode) {
              return paneItemView.parentNode.removeChild(_this.wrapIcon);
            }
          }), 500);
        };
      })(this)), 500);
    };

    SearchView.prototype._activate = function() {
      var workspaceView;
      this.active = true;
      this.resetProgress();
      this.panel.show();
      workspaceView = atom.views.getView(atom.workspace);
      workspaceView.classList.add('atomic-emacs-search-visible');
      return workspaceView.addEventListener('focusin', this.workspaceFocusInListener);
    };

    SearchView.prototype._deactivate = function() {
      var workspaceView;
      this.active = false;
      this.searchEditor.setText('');
      this.panel.hide();
      workspaceView = atom.views.getView(atom.workspace);
      workspaceView.classList.remove('atomic-emacs-search-visible');
      return workspaceView.removeEventListener('focusin', this.workspaceFocusInListener);
    };

    SearchView.prototype._runQuery = function() {
      var text;
      text = this.searchEditor.getText();
      this.lastQuery = text;
      return this.searchManager.changed(text, {
        caseSensitive: this.caseSensitive,
        isRegExp: this.isRegExp,
        direction: this.direction
      });
    };

    SearchView.prototype._updateLabel = function() {
      var currentIndex, ellipsis, ref, ref1, total;
      if (this.total === 0 && !this.isScanning) {
        return this.label.innerHTML = 'No&nbsp;matches';
      } else {
        currentIndex = (ref = this.currentIndex) != null ? ref : '?';
        total = (ref1 = this.total) != null ? ref1 : '?';
        ellipsis = this.isScanning ? '...' : '';
        return this.label.innerHTML = currentIndex + "&nbsp;of&nbsp;" + total + ellipsis;
      }
    };

    SearchView.prototype._updateCaseSensitivityButton = function() {
      var method;
      method = this.caseSensitive ? 'add' : 'remove';
      return this.caseSensitivityButton.classList[method]('selected');
    };

    SearchView.prototype._updateIsRegExpButton = function() {
      var method;
      method = this.isRegExp ? 'add' : 'remove';
      return this.isRegExpButton.classList[method]('selected');
    };

    SearchView.prototype._caseSensitivitySVG = function() {
      return "<svg class=\"icon\" viewBox=\"0 0 20 16\" stroke=\"none\">\n  <path d=\"M10.919,13 L9.463,13 C9.29966585,13 9.16550052,12.9591671 9.0605,12.8775 C8.95549947,12.7958329 8.8796669,12.6943339 8.833,12.573 L8.077,10.508 L3.884,10.508 L3.128,12.573 C3.09066648,12.6803339 3.01716722,12.7783329 2.9075,12.867 C2.79783279,12.9556671 2.66366746,13 2.505,13 L1.042,13 L5.018,2.878 L6.943,2.878 L10.919,13 Z M4.367,9.178 L7.594,9.178 L6.362,5.811 C6.30599972,5.66166592 6.24416701,5.48550102 6.1765,5.2825 C6.108833,5.07949898 6.04233366,4.85900119 5.977,4.621 C5.91166634,4.85900119 5.84750032,5.08066564 5.7845,5.286 C5.72149969,5.49133436 5.65966697,5.67099923 5.599,5.825 L4.367,9.178 Z M18.892,13 L18.115,13 C17.9516658,13 17.8233338,12.9755002 17.73,12.9265 C17.6366662,12.8774998 17.5666669,12.7783341 17.52,12.629 L17.366,12.118 C17.1839991,12.2813341 17.0055009,12.4248327 16.8305,12.5485 C16.6554991,12.6721673 16.4746676,12.7759996 16.288,12.86 C16.1013324,12.9440004 15.903001,13.0069998 15.693,13.049 C15.4829989,13.0910002 15.2496679,13.112 14.993,13.112 C14.6896651,13.112 14.4096679,13.0711671 14.153,12.9895 C13.896332,12.9078329 13.6758342,12.7853342 13.4915,12.622 C13.3071657,12.4586658 13.1636672,12.2556679 13.061,12.013 C12.9583328,11.7703321 12.907,11.4880016 12.907,11.166 C12.907,10.895332 12.9781659,10.628168 13.1205,10.3645 C13.262834,10.100832 13.499665,9.8628344 13.831,9.6505 C14.162335,9.43816561 14.6033306,9.2620007 15.154,9.122 C15.7046694,8.9819993 16.3883292,8.90266676 17.205,8.884 L17.205,8.464 C17.205,7.98333093 17.103501,7.62750116 16.9005,7.3965 C16.697499,7.16549885 16.4023352,7.05 16.015,7.05 C15.7349986,7.05 15.5016676,7.08266634 15.315,7.148 C15.1283324,7.21333366 14.9661673,7.28683292 14.8285,7.3685 C14.6908326,7.45016707 14.5636672,7.52366634 14.447,7.589 C14.3303327,7.65433366 14.2020007,7.687 14.062,7.687 C13.9453327,7.687 13.8450004,7.65666697 13.761,7.596 C13.6769996,7.53533303 13.6093336,7.46066711 13.558,7.372 L13.243,6.819 C14.0690041,6.06299622 15.0653275,5.685 16.232,5.685 C16.6520021,5.685 17.0264983,5.75383264 17.3555,5.8915 C17.6845016,6.02916736 17.9633322,6.22049877 18.192,6.4655 C18.4206678,6.71050122 18.5944994,7.00333163 18.7135,7.344 C18.8325006,7.68466837 18.892,8.05799797 18.892,8.464 L18.892,13 Z M15.532,11.922 C15.7093342,11.922 15.8726659,11.9056668 16.022,11.873 C16.1713341,11.8403332 16.3124993,11.7913337 16.4455,11.726 C16.5785006,11.6606663 16.7068327,11.5801671 16.8305,11.4845 C16.9541673,11.3888329 17.0789993,11.2756673 17.205,11.145 L17.205,9.934 C16.7009975,9.95733345 16.279835,10.0004997 15.9415,10.0635 C15.603165,10.1265003 15.3313343,10.2069995 15.126,10.305 C14.9206656,10.4030005 14.7748337,10.5173327 14.6885,10.648 C14.6021662,10.7786673 14.559,10.9209992 14.559,11.075 C14.559,11.3783349 14.6488324,11.5953327 14.8285,11.726 C15.0081675,11.8566673 15.2426652,11.922 15.532,11.922 L15.532,11.922 Z\"></path>\n</svg>";
    };

    SearchView.prototype._isRegExpSVG = function() {
      return "<svg class=\"icon\" viewBox=\"0 0 20 16\" stroke=\"none\">\n  <rect x=\"3\" y=\"10\" width=\"3\" height=\"3\" rx=\"1\"></rect>\n  <rect x=\"12\" y=\"3\" width=\"2\" height=\"9\" rx=\"1\"></rect>\n  <rect transform=\"translate(13.000000, 7.500000) rotate(60.000000) translate(-13.000000, -7.500000) \" x=\"12\" y=\"3\" width=\"2\" height=\"9\" rx=\"1\"></rect>\n  <rect transform=\"translate(13.000000, 7.500000) rotate(-60.000000) translate(-13.000000, -7.500000) \" x=\"12\" y=\"3\" width=\"2\" height=\"9\" rx=\"1\"></rect>\n</svg>";
    };

    return SearchView;

  })();

}).call(this);

//# sourceMappingURL=data:application/json;base64,

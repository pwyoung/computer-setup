/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as tslib_1 from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/subscriptionFactoryMappers";
import * as Parameters from "../models/parameters";
/** Class representing a SubscriptionFactory. */
var SubscriptionFactory = /** @class */ (function () {
    /**
     * Create a SubscriptionFactory.
     * @param {SubscriptionClientContext} client Reference to the service client.
     */
    function SubscriptionFactory(client) {
        this.client = client;
    }
    /**
     * Creates an Azure subscription
     * @param enrollmentAccountName The name of the enrollment account to which the subscription will
     * be billed.
     * @param body The subscription creation parameters.
     * @param [options] The optional parameters
     * @returns Promise<Models.SubscriptionFactoryCreateSubscriptionInEnrollmentAccountResponse>
     */
    SubscriptionFactory.prototype.createSubscriptionInEnrollmentAccount = function (enrollmentAccountName, body, options) {
        return this.beginCreateSubscriptionInEnrollmentAccount(enrollmentAccountName, body, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    /**
     * Creates an Azure subscription
     * @param enrollmentAccountName The name of the enrollment account to which the subscription will
     * be billed.
     * @param body The subscription creation parameters.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    SubscriptionFactory.prototype.beginCreateSubscriptionInEnrollmentAccount = function (enrollmentAccountName, body, options) {
        return this.client.sendLRORequest({
            enrollmentAccountName: enrollmentAccountName,
            body: body,
            options: options
        }, beginCreateSubscriptionInEnrollmentAccountOperationSpec, options);
    };
    return SubscriptionFactory;
}());
export { SubscriptionFactory };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var beginCreateSubscriptionInEnrollmentAccountOperationSpec = {
    httpMethod: "POST",
    path: "providers/Microsoft.Billing/enrollmentAccounts/{enrollmentAccountName}/providers/Microsoft.Subscription/createSubscription",
    urlParameters: [
        Parameters.enrollmentAccountName
    ],
    queryParameters: [
        Parameters.apiVersion0
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "body",
        mapper: tslib_1.__assign({}, Mappers.SubscriptionCreationParameters, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.SubscriptionCreationResult,
            headersMapper: Mappers.SubscriptionFactoryCreateSubscriptionInEnrollmentAccountHeaders
        },
        202: {
            headersMapper: Mappers.SubscriptionFactoryCreateSubscriptionInEnrollmentAccountHeaders
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
//# sourceMappingURL=subscriptionFactory.js.map
import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { HDInsightManagementClientContext } from "../hDInsightManagementClientContext";
/** Class representing a Locations. */
export declare class Locations {
    private readonly client;
    /**
     * Create a Locations.
     * @param {HDInsightManagementClientContext} client Reference to the service client.
     */
    constructor(client: HDInsightManagementClientContext);
    /**
     * Lists the usages for the specified location.
     * @param location The location to get capabilities for.
     * @param [options] The optional parameters
     * @returns Promise<Models.LocationsListUsagesResponse>
     */
    listUsages(location: string, options?: msRest.RequestOptionsBase): Promise<Models.LocationsListUsagesResponse>;
    /**
     * @param location The location to get capabilities for.
     * @param callback The callback
     */
    listUsages(location: string, callback: msRest.ServiceCallback<Models.UsagesListResult>): void;
    /**
     * @param location The location to get capabilities for.
     * @param options The optional parameters
     * @param callback The callback
     */
    listUsages(location: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.UsagesListResult>): void;
}
//# sourceMappingURL=locations.d.ts.map
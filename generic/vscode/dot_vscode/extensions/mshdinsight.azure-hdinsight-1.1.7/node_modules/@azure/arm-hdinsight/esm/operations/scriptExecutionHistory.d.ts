import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { HDInsightManagementClientContext } from "../hDInsightManagementClientContext";
/** Class representing a ScriptExecutionHistory. */
export declare class ScriptExecutionHistory {
    private readonly client;
    /**
     * Create a ScriptExecutionHistory.
     * @param {HDInsightManagementClientContext} client Reference to the service client.
     */
    constructor(client: HDInsightManagementClientContext);
    /**
     * Lists all scripts' execution history for the specified cluster.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param [options] The optional parameters
     * @returns Promise<Models.ScriptExecutionHistoryListByClusterResponse>
     */
    listByCluster(resourceGroupName: string, clusterName: string, options?: msRest.RequestOptionsBase): Promise<Models.ScriptExecutionHistoryListByClusterResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param callback The callback
     */
    listByCluster(resourceGroupName: string, clusterName: string, callback: msRest.ServiceCallback<Models.ScriptActionExecutionHistoryList>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByCluster(resourceGroupName: string, clusterName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ScriptActionExecutionHistoryList>): void;
    /**
     * Promotes the specified ad-hoc script execution to a persisted script.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param scriptExecutionId The script execution Id
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    promote(resourceGroupName: string, clusterName: string, scriptExecutionId: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param scriptExecutionId The script execution Id
     * @param callback The callback
     */
    promote(resourceGroupName: string, clusterName: string, scriptExecutionId: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param scriptExecutionId The script execution Id
     * @param options The optional parameters
     * @param callback The callback
     */
    promote(resourceGroupName: string, clusterName: string, scriptExecutionId: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Lists all scripts' execution history for the specified cluster.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ScriptExecutionHistoryListByClusterNextResponse>
     */
    listByClusterNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ScriptExecutionHistoryListByClusterNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listByClusterNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ScriptActionExecutionHistoryList>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listByClusterNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ScriptActionExecutionHistoryList>): void;
}
//# sourceMappingURL=scriptExecutionHistory.d.ts.map
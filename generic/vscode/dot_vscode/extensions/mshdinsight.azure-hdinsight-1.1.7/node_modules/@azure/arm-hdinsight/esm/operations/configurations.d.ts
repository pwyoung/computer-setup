import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { HDInsightManagementClientContext } from "../hDInsightManagementClientContext";
/** Class representing a Configurations. */
export declare class Configurations {
    private readonly client;
    /**
     * Create a Configurations.
     * @param {HDInsightManagementClientContext} client Reference to the service client.
     */
    constructor(client: HDInsightManagementClientContext);
    /**
     * Gets all configuration information for an HDI cluster.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param [options] The optional parameters
     * @returns Promise<Models.ConfigurationsListResponse>
     */
    list(resourceGroupName: string, clusterName: string, options?: msRest.RequestOptionsBase): Promise<Models.ConfigurationsListResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param callback The callback
     */
    list(resourceGroupName: string, clusterName: string, callback: msRest.ServiceCallback<Models.ClusterConfigurations>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param options The optional parameters
     * @param callback The callback
     */
    list(resourceGroupName: string, clusterName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ClusterConfigurations>): void;
    /**
     * Configures the HTTP settings on the specified cluster. This API is deprecated, please use
     * UpdateGatewaySettings in cluster endpoint instead.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param configurationName The name of the cluster configuration.
     * @param parameters The cluster configurations.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    update(resourceGroupName: string, clusterName: string, configurationName: string, parameters: {
        [propertyName: string]: string;
    }, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * The configuration object for the specified cluster. This API is not recommended and might be
     * removed in the future. Please consider using List configurations API instead.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param configurationName The name of the cluster configuration.
     * @param [options] The optional parameters
     * @returns Promise<Models.ConfigurationsGetResponse>
     */
    get(resourceGroupName: string, clusterName: string, configurationName: string, options?: msRest.RequestOptionsBase): Promise<Models.ConfigurationsGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param configurationName The name of the cluster configuration.
     * @param callback The callback
     */
    get(resourceGroupName: string, clusterName: string, configurationName: string, callback: msRest.ServiceCallback<{
        [propertyName: string]: string;
    }>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param configurationName The name of the cluster configuration.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, clusterName: string, configurationName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<{
        [propertyName: string]: string;
    }>): void;
    /**
     * Configures the HTTP settings on the specified cluster. This API is deprecated, please use
     * UpdateGatewaySettings in cluster endpoint instead.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param configurationName The name of the cluster configuration.
     * @param parameters The cluster configurations.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginUpdate(resourceGroupName: string, clusterName: string, configurationName: string, parameters: {
        [propertyName: string]: string;
    }, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
}
//# sourceMappingURL=configurations.d.ts.map
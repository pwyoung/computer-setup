import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { HDInsightManagementClientContext } from "../hDInsightManagementClientContext";
/** Class representing a Extensions. */
export declare class Extensions {
    private readonly client;
    /**
     * Create a Extensions.
     * @param {HDInsightManagementClientContext} client Reference to the service client.
     */
    constructor(client: HDInsightManagementClientContext);
    /**
     * Enables the Operations Management Suite (OMS) on the HDInsight cluster.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param parameters The Operations Management Suite (OMS) workspace parameters.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    enableMonitoring(resourceGroupName: string, clusterName: string, parameters: Models.ClusterMonitoringRequest, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Gets the status of Operations Management Suite (OMS) on the HDInsight cluster.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param [options] The optional parameters
     * @returns Promise<Models.ExtensionsGetMonitoringStatusResponse>
     */
    getMonitoringStatus(resourceGroupName: string, clusterName: string, options?: msRest.RequestOptionsBase): Promise<Models.ExtensionsGetMonitoringStatusResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param callback The callback
     */
    getMonitoringStatus(resourceGroupName: string, clusterName: string, callback: msRest.ServiceCallback<Models.ClusterMonitoringResponse>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param options The optional parameters
     * @param callback The callback
     */
    getMonitoringStatus(resourceGroupName: string, clusterName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ClusterMonitoringResponse>): void;
    /**
     * Disables the Operations Management Suite (OMS) on the HDInsight cluster.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    disableMonitoring(resourceGroupName: string, clusterName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Creates an HDInsight cluster extension.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param extensionName The name of the cluster extension.
     * @param parameters The cluster extensions create request.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    create(resourceGroupName: string, clusterName: string, extensionName: string, parameters: Models.Extension, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Gets the extension properties for the specified HDInsight cluster extension.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param extensionName The name of the cluster extension.
     * @param [options] The optional parameters
     * @returns Promise<Models.ExtensionsGetResponse>
     */
    get(resourceGroupName: string, clusterName: string, extensionName: string, options?: msRest.RequestOptionsBase): Promise<Models.ExtensionsGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param extensionName The name of the cluster extension.
     * @param callback The callback
     */
    get(resourceGroupName: string, clusterName: string, extensionName: string, callback: msRest.ServiceCallback<Models.Extension>): void;
    /**
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param extensionName The name of the cluster extension.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, clusterName: string, extensionName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Extension>): void;
    /**
     * Deletes the specified extension for HDInsight cluster.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param extensionName The name of the cluster extension.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, clusterName: string, extensionName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Enables the Operations Management Suite (OMS) on the HDInsight cluster.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param parameters The Operations Management Suite (OMS) workspace parameters.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginEnableMonitoring(resourceGroupName: string, clusterName: string, parameters: Models.ClusterMonitoringRequest, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Disables the Operations Management Suite (OMS) on the HDInsight cluster.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginDisableMonitoring(resourceGroupName: string, clusterName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Creates an HDInsight cluster extension.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param extensionName The name of the cluster extension.
     * @param parameters The cluster extensions create request.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreate(resourceGroupName: string, clusterName: string, extensionName: string, parameters: Models.Extension, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Deletes the specified extension for HDInsight cluster.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param extensionName The name of the cluster extension.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginDeleteMethod(resourceGroupName: string, clusterName: string, extensionName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
}
//# sourceMappingURL=extensions.d.ts.map
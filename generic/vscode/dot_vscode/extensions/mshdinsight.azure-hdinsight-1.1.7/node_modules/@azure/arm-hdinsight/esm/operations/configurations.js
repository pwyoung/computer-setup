/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/configurationsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a Configurations. */
var Configurations = /** @class */ (function () {
    /**
     * Create a Configurations.
     * @param {HDInsightManagementClientContext} client Reference to the service client.
     */
    function Configurations(client) {
        this.client = client;
    }
    Configurations.prototype.list = function (resourceGroupName, clusterName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            clusterName: clusterName,
            options: options
        }, listOperationSpec, callback);
    };
    /**
     * Configures the HTTP settings on the specified cluster. This API is deprecated, please use
     * UpdateGatewaySettings in cluster endpoint instead.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param configurationName The name of the cluster configuration.
     * @param parameters The cluster configurations.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    Configurations.prototype.update = function (resourceGroupName, clusterName, configurationName, parameters, options) {
        return this.beginUpdate(resourceGroupName, clusterName, configurationName, parameters, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    Configurations.prototype.get = function (resourceGroupName, clusterName, configurationName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            clusterName: clusterName,
            configurationName: configurationName,
            options: options
        }, getOperationSpec, callback);
    };
    /**
     * Configures the HTTP settings on the specified cluster. This API is deprecated, please use
     * UpdateGatewaySettings in cluster endpoint instead.
     * @param resourceGroupName The name of the resource group.
     * @param clusterName The name of the cluster.
     * @param configurationName The name of the cluster configuration.
     * @param parameters The cluster configurations.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    Configurations.prototype.beginUpdate = function (resourceGroupName, clusterName, configurationName, parameters, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            clusterName: clusterName,
            configurationName: configurationName,
            parameters: parameters,
            options: options
        }, beginUpdateOperationSpec, options);
    };
    return Configurations;
}());
export { Configurations };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var listOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/configurations",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.clusterName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ClusterConfigurations
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/configurations/{configurationName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.clusterName,
        Parameters.configurationName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
var beginUpdateOperationSpec = {
    httpMethod: "POST",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HDInsight/clusters/{clusterName}/configurations/{configurationName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.clusterName,
        Parameters.configurationName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "parameters",
        mapper: {
            required: true,
            serializedName: "parameters",
            type: {
                name: "Dictionary",
                value: {
                    type: {
                        name: "String"
                    }
                }
            }
        }
    },
    responses: {
        200: {},
        202: {},
        204: {},
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer: serializer
};
//# sourceMappingURL=configurations.js.map
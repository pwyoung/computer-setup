#!/usr/bin/env bash

# TODO: ansible
# https://cloudinit.readthedocs.io/en/latest/reference/examples.html#configure-instance-to-be-managed-by-ansible

################################################################################

# Dir containing this script
SCRIPT_DIR=$(dirname $(realpath "$0}"))

# Cloud-Init Script
MC="${SCRIPT_DIR}/../cloud-init/ansible"

# MAAS server
H='192.168.3.6'
MS="http://${H}:5240/MAAS"

# MAAS user
#MU='maasadmin'
MU='pwyoung'

# MAAS API KEY
#  mkdir ~/.maas-api-keyfiles
#  # Assuming passwordless sudo
#  ssh maas-server "sudo maas apikey --username=$MU" > ~/.maas-api-keyfiles/$MU
MK=$(head -1 ~/.maas-api-keyfiles/$MU)

# REQUIRED PARAMATERS
ARCH="amd64"
# Machine's netboot MAC
MAC='48:21:0b:55:b4:5b'
# Power type
PT="manual"

# Hostname
HN='nuc'
# Domain Name
DN='maas'
# Description
DESC="New machine: $HN $DN"

# Command output
OF=~/.maas-command-output.txt

################################################################################

login() {
    if maas list | egrep "^${MU} " >/dev/null; then
        echo "User $MU is already logged in"
    else
        echo "Logging in, user=$MU"
        maas login $MU $MS $MK | tee -a $OF
    fi
}

create_machine() {
    maas $MU machines create \
         architecture=${ARCH} \
         mac_addresses=${MAC} \
         power_type=${PT} \
         enable_ssh=true \
         hostname=${HN>} \
         domain=${DN} | tee -a $OF

        # description="${DESC}"
        # commissioning_scripts=""
        # testing_scripts=""
}

deploy_machine() {
    if [ -e $MC ]; then
        echo "Deploying $H using cloud-init script $MC"
        # Encode the User Data
        USER_DATA=$(base64 $MC)
    else
        echo "ERROR: $MC not found"
        exit 1
    fi

    # Given the hostname, get the MAAS system_id
    MCF=~/.maas-machines-read.json
    maas $MU machines read > $MCF
    SYSTEM_ID=$(cat $MCF | jq ".[] | select(.hostname == \"${HN}\")" | jq -r '.system_id')

    maas $MU machine deploy ${SYSTEM_ID} user_data="${USER_DATA}" | tee -a $OF
}

clear_command_log() {
    echo "" > $OF
}

open_maas_in_browser() {
    MURL="${MS}/r/machines"
    echo "\n\n\n open ${MURL}" | tee -a $OF
}

run() {
    clear_command_log

    # login

    # create_machine

    deploy_machine

    open_maas_in_browser
}

run









#!/usr/bin/env bash

# TODO: ansible
# https://cloudinit.readthedocs.io/en/latest/reference/examples.html#configure-instance-to-be-managed-by-ansible

################################################################################

# Dir containing this script
SCRIPT_DIR=$(dirname $(realpath "$0}"))

. ${SCRIPT_DIR}/common-setup

. ${SCRIPT_DIR}/nuc-setup


################################################################################

login() {
    if maas list | egrep "^${MAAS_USER} " >/dev/null; then
        echo "User $MAAS_USER is already logged in"
    else
        echo "Logging in, user=$MAAS_USER"
        maas login $MAAS_USER $MAAS_SERVER $MAAS_KEY | tee -a $LOG_FILE
    fi
}

create_machine() {
    maas $MAAS_USER machines create \
         architecture=${ARCH} \
         mac_addresses=${MAC} \
         power_type=${POWER_TYPE} \
         enable_ssh=true \
         hostname=${HOST_NAME>} \
         domain=${DOMAIN_NAME} | tee -a $LOG_FILE

        # description="${DESC}"
        # commissioning_scripts=""
        # testing_scripts=""
}

deploy_machine() {
    if [ -e $USER_DATA_SCRIPT ]; then
        echo "Deploying $H using cloud-init script $USER_DATA_SCRIPT"
        # Encode the User Data
        USER_DATA=$(base64 $USER_DATA_SCRIPT)
    else
        echo "ERROR: $USER_DATA_SCRIPT not found"
        exit 1
    fi

    # Given the hostname, get the MAAS system_id
    MAAS_CMD_FILE=~/.maas-machines-read.json
    maas $MAAS_USER machines read > $MAAS_CMD_FILE
    SYSTEM_ID=$(cat $MAAS_CMD_FILE | jq ".[] | select(.hostname == \"${HN}\")" | jq -r '.system_id')

    maas $MAAS_USER machine deploy ${SYSTEM_ID} user_data="${USER_DATA}" | tee -a $LOG_FILE
}

clear_command_log() {
    echo "" > $LOG_FILE
}

open_maas_in_browser() {
    MAAS_WEB_URL="${MAAS_SERVER}/r/machines"
    echo "open ${MAAS_WEB_URL}" | tee -a $LOG_FILE
}

run() {
    clear_command_log

    login

    # create_machine

    deploy_machine

    open_maas_in_browser
}

run









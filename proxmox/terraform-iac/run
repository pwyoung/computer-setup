#!/usr/bin/env bash

# Exit on error
set -e

# set -x

# Location of this script
MY_DIR=$(cd "$(dirname "$0")"; pwd -P)

# Terraform files
TF_DIR=$MY_DIR/tf

show_usage()
{
    printf "Usage: $0 <command>\n"
    cat <<EOF
    -c|--clean
    -b|--build
    -t|--test
    -h|--help

    Example:
      $0 -C -b -t
EOF
    exit 0
}

if [[ $# -lt 1 ]]; then
    show_usage "$@"
fi

clean() {
    echo "Clean"

    cd $TF_DIR

    terraform apply -destroy || true

    # "clean all"
    rm -rf ./.terraform* || true
    rm -f ./terraform.tfstate || true
}

build() {
    echo "Build"
    cd $TF_DIR

    # Fail here if terraform is not installed
    terraform version -json | jq .

    # Init (if it seems necessary)
    if [ ! -e ./.terraform* ]; then
        terraform init -upgrade
    fi

    # Plan
    TF_LOG=trace terraform plan -lock=false -out ./.tfplan

    # Wait
    read -p "Hit enter to proceed"

    # Apply
    terraform apply ./.tfplan
}

run_test() {
    echo "Test"
}


################################################################################

while [[ $# -gt 0 ]]; do
  key="$1"

  case $key in
    -c|--clean)
        shift
        clean
        ;;
    -b|--build)
        shift
        build
        ;;
    -t|--test)
        shift
        run_test
        ;;
    -h|--help)
        show_usage
      ;;
    *)    # unknown option
      POSITIONAL+=("$1") # save it in an array for later
      shift # past argument
      ;;
  esac
done

#!/usr/bin/env bash

# Exit on error
set -e

# set -x

# Location of this script
MY_DIR=$(cd "$(dirname "$0")"; pwd -P)

# Terraform files
TF_DIR=$MY_DIR/tf

# Scripts dir
SCRIPTS_DIR=$MY_DIR/scripts

show_usage()
{
    printf "Usage: $0 <command>\n"
    cat <<EOF
    -c|--clean
    -b|--build
    -t|--test
    -h|--help

    Example:
      $0 -C -b -t
EOF
    exit 0
}

if [[ $# -lt 1 ]]; then
    show_usage "$@"
fi

clean() {
    echo "Clean"

    cd $TF_DIR

    terraform apply -destroy || true
}

clean_all() {
    clean

    echo "Clean-All"

    cd $TF_DIR

    rm -rf ./.terraform* || true
    rm -rf ./.tfplan || true
    rm -f ./terraform.tfstate* || true
}

tf_init() {
    # Init (if it seems necessary)
    if ! ls -1d ./.terraform*; then
        terraform init -upgrade
    fi
}

build() {
    echo "Build"

    cd $TF_DIR

    # Fail here if terraform is not installed
    terraform version -json | jq .

    tf_init

    # Plan
    TF_LOG=trace terraform plan -lock=false -out ./.tfplan

    # Apply
    terraform apply ./.tfplan
}

tf_plan() {
    echo "Plan"

    cd $TF_DIR

    tf_init

    TF_LOG=trace terraform plan -lock=false -out ./.tfplan
}

run_test() {
    echo "Test"

    # Fetch the IPs from Terraform
    cd $TF_DIR
    terraform show -json | jq -r ".values.outputs.ip_list.value[][][][]" | egrep -v '^127.'

    # Get the IP, MAC, and VM_ID of the running machines from the PVE node
    cd $SCRIPTS_DIR
    bash ./get_ips.sh
}

################################################################################

while [[ $# -gt 0 ]]; do
  key="$1"

  case $key in
    -c|--clean)
        shift
        clean
        ;;
    -C|--clean-all)
        shift
        clean_all
        ;;
    -b|--build)
        shift
        build
        ;;
    -t|--test)
        shift
        run_test
        ;;
    -p|--plan)
        shift
        tf_plan
        ;;
    -h|--help)
        show_usage
      ;;
    *)    # unknown option
      POSITIONAL+=("$1") # save it in an array for later
      shift # past argument
      ;;
  esac
done

################################################################################
# ACI: Hyperv ubuntu vm
################################################################################

Host h
  HostName 172.18.27.137
  User youngp
  Port 22
  UserKnownHostsFile /dev/null
  StrictHostKeyChecking no
  PasswordAuthentication no
  IdentitiesOnly yes
  LogLevel FATAL

# HYPERV-DEV: info from ~/bin-local/_get_hyperv_ip
Host v
  HostName 192.168.183.89
  User vagrant
  Port 22
  UserKnownHostsFile /dev/null
  StrictHostKeyChecking no
  PasswordAuthentication no
  IdentityFile "C:/Users/youngp/OneDrive - ACI Worldwide Corp/data/ACI/Tools/Vagrant/ubuntu-hyperv-CAN-NOT-SHARE-FOLDER/.vagrant/machines/default/hyperv/private_key"
  IdentitiesOnly yes
  LogLevel FATAL

################################################################################
# ACI: HADOOP PERF cluster
################################################################################

Host hadoop-perf
    HostName cov3lphdpedge01vm.am.tsacorp.com
    User youngp
# su - srvredi # Welcome..
# su - kumarm # Become kumarm (using common password)
# sudo su - # kumarm can become root

Host hadoop-perf-youngp
    HostName cov3lphdpedge01vm.am.tsacorp.com
    User youngp

Host hadoop-perf-kumarm
    HostName cov3lphdpedge01vm.am.tsacorp.com
    User kumarm

Host hadoop-perf-root
    HostName cov3lphdpedge01vm.am.tsacorp.com
    User root

################################################################################
# ACI: HADOOP DEV
################################################################################

Host hadoop-dev
    HostName cov3lhdpedge01vm.am.tsacorp.com
    User youngp

Host hadoop-dev-root
    HostName cov3lhdpedge01vm.am.tsacorp.com
    User root


################################################################################
# CLOUDBREAK
################################################################################

# https://docs.cloudera.com/HDPDocuments/Cloudbreak/Cloudbreak-2.7.0/
# https://community.cloudera.com/t5/Community-Articles/Deploy-a-Demo-Druid-LLAP-Cluster-within-Minutes-Using/ta-p/249165
#
# The HDP nodes cloudbreak creates are reachable as user "cloudbreak"
# But not as user "ec2-user"
#
# ssh cloudbreak
# sudo su -
# cd /var/lib/cloudbreak-deployment
# cbd start
#
Host cloudbreak
  HostName 52.204.232.32
  #User ec2-user
  User cloudbreak
  Port 22
  LogLevel FATAL
  UserKnownHostsFile /dev/null
  StrictHostKeyChecking no
  PasswordAuthentication no
  ForwardAgent yes

# Attempt to Repair cloudbreak
#
# OLD=34-224-63-101
# NEW=52-204-232-32
# grep -lr  $OLD ./* | xargs sed -i "s/$OLD/$NEW/g"
#
# OLD=34.224.63.101
# NEW=52.204.232.32
# grep -lr  $OLD ./* | xargs sed -i "s/$OLD/$NEW/g"
#
# netstat -tulpn | grep -i listen

################################################################################
# DOCS: SSH 3 TYPE OF PORT FOWARDING
################################################################################

# Docs
#   - https://zaiste.net/ssh_port_forwarding/
# Notes
#   - There are 3 types of port forwarding:
#     - local port forwarding
#       - ssh -L source_port:forward_to_host:destination_port via_host
#     - remote port forwarding
#       -
#     - dynamic port forwarding
#       -
#   - Disable shell
#     - '-nNT'
#   - Disable shell, and run in background
#     - '-nNTf'
#

################################################################################
# SSH TO AMBARI
################################################################################

# This supports:
#   - ssh -L 8080:localhost:8080 ambari
#     - Opens a local SSH connection to ambari, with a tunnel which allows:
#     - firefox https:/localhost:8080
#   - ssh -L 9000:localhost:8080 ambari
#     - Same as above, but use port 9000 locally to connect to 8080 on the remote machine
#   - ssh -L 8080:localhost:8080 ambari -T
#     - same as above, but prevents opening a shell on the other end
#   - ssh -L localhost:8080:localhost:8080 ambari
#     - same as above, but adds a bind-address so only local apps can use the tunnel
#   - ssh -L localhost:8080:localhost:8080 ambari -TNnf
#     - same as above, but runs it properly in the background
Host ambari
  # new cluster
  HostName 3.90.159.22
  # druid-cluster-2
  #HostName 52.45.220.96
  User cloudbreak
  #User hive
  #User youngp
  Port 22
  LogLevel FATAL
  UserKnownHostsFile /dev/null
  StrictHostKeyChecking no
  PasswordAuthentication no
  ForwardAgent yes
  #DynamicForward 8080

################################################################################
# BASTION
################################################################################

# This is the ambari host
Host bastion
  HostName 52.45.220.96
  User cloudbreak
  Port 22
  UserKnownHostsFile /dev/null
  StrictHostKeyChecking no
  PasswordAuthentication no
  LogLevel FATAL
  ForwardAgent yes

################################################################################
# LOCAL SSH FORWARD: a port through a bastion host
################################################################################
#   docs:
#     https://myopswork.com/ssh-tunnel-for-rds-via-bastion-host-6659a48edc
#   cli complete example
#     ssh -N -L 3307:my-rds-db.us-east-1.rds.amazonaws.com:3306 ec2-my-bastion-server.compute-1.amazonaws.com

# CLI Test
#   ssh -N -L 8080:10.0.0.254:8080 bastion

Host ambari-2
  #Hostname 52.45.220.96
  Hostname bastion
  Localforward 8080 10.0.0.254:8080
  ForwardAgent yes

################################################################################
# TODO: TRANSPARENT SSH TUNNEL: through a bastion host
################################################################################
# docs:
#   https://myopswork.com/transparent-ssh-tunnel-through-a-bastion-host-d1d864ddb9ae

#Host 10.0.0.*
#  User cloudbreak
#  ProxyCommand ssh -W %h:%p  cloudbreak@bastion

